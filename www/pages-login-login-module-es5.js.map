{"version":3,"sources":["webpack:///src/app/pages/login/login.page.html","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.scss","webpack:///src/app/pages/login/login.page.ts"],"names":["routes","path","component","LoginPageModule","imports","forChild","declarations","LoginPage","formBuilder","authService","credentialsForm","group","email","required","password","minLength","login","value","subscribe","register","res","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAiBA,QAAaC,eAAe;AAAA;AAAA,KAA5B;;AAAaA,mBAAe,6DAV3B,+DAAS;AACRC,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,6DAAaC,QAAb,CAAsBL,MAAtB,CALO,CADD;AAQRM,kBAAY,EAAE,CAAC,qDAAD;AARN,KAAT,CAU2B,GAAfH,eAAe,CAAf;;;;;;;;;;;;;;;;AC1Bb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAaI,SAAS;AAIpB,yBAAoBC,WAApB,EAAsDC,WAAtD,EAAgF;AAAA;;AAA5D,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAC,WAAA,GAAAA,WAAA;AAA6B;;AAJ/D;AAAA;AAAA,mCAMT;AACT,eAAKC,eAAL,GAAuB,KAAKF,WAAL,CAAiBG,KAAjB,CAAuB;AAC5CC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWD,KAAjC,CAAL,CADqC;AAE5CE,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,EAAsB,0DAAWE,SAAX,CAAqB,CAArB,CAAtB,CAAL;AAFkC,WAAvB,CAAvB;AAID;AAXmB;AAAA;AAAA,mCAaT;AACT,eAAKN,WAAL,CAAiBO,KAAjB,CAAuB,KAAKN,eAAL,CAAqBO,KAA5C,EAAmDC,SAAnD;AACD;AAfmB;AAAA;AAAA,mCAiBT;AAAA;;AACT,eAAKT,WAAL,CAAiBU,QAAjB,CAA0B,KAAKT,eAAL,CAAqBO,KAA/C,EAAsDC,SAAtD,CAAgE,UAAAE,GAAG,EAAI;AACrE;AACA,iBAAI,CAACX,WAAL,CAAiBO,KAAjB,CAAuB,KAAI,CAACN,eAAL,CAAqBO,KAA5C,EAAmDC,SAAnD;AACD,WAHD;AAID;AAtBmB;;AAAA;AAAA,OAAtB;;;;cAImC;;cAAkC;;;;AAJxDX,aAAS,6DALrB,gEAAU;AACTc,cAAQ,EAAE,WADD;AAETC,cAAQ,EAAR;AAAA;AAAA,gGAFS;;;;AAAA,KAAV,CAKqB,GAATf,SAAS,CAAT","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n \\n<ion-content padding>\\n  <form [formGroup]=\\\"credentialsForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n    </ion-item>\\n \\n    <ion-button expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!credentialsForm.valid\\\">Login</ion-button>\\n    <ion-button expand=\\\"full\\\" type=\\\"button\\\" (click)=\\\"register()\\\" [disabled]=\\\"!credentialsForm.valid\\\">Register</ion-button>\\n \\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n \nimport { IonicModule } from '@ionic/angular';\n \nimport { LoginPage } from './login.page';\n \nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n \n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n \n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n \n  credentialsForm: FormGroup;\n \n  constructor(private formBuilder: FormBuilder, private authService: AuthService) { }\n \n  ngOnInit() {\n    this.credentialsForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n \n  onSubmit() {\n    this.authService.login(this.credentialsForm.value).subscribe();\n  }\n \n  register() {\n    this.authService.register(this.credentialsForm.value).subscribe(res => {\n      // Call Login to automatically login the new user\n      this.authService.login(this.credentialsForm.value).subscribe();\n    });\n  }\n \n}"]}