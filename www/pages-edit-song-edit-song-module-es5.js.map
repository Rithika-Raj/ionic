{"version":3,"sources":["webpack:///src/app/pages/edit-song/edit-song.page.html","webpack:///src/app/pages/edit-song/edit-song-routing.module.ts","webpack:///src/app/pages/edit-song/edit-song.module.ts","webpack:///src/app/pages/edit-song/edit-song.page.scss","webpack:///src/app/pages/edit-song/edit-song.page.ts"],"names":["routes","path","component","EditSongPageRoutingModule","imports","forChild","exports","EditSongPageModule","declarations","EditSongPage","songAPI","actRoute","router","fb","id","snapshot","paramMap","get","getSongData","updateSongForm","group","song_name","artist","getSong","subscribe","res","setValue","valid","updateSong","value","console","log","reset","navigate","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,yBAAyB;AAAA;AAAA,KAAtC;;AAAaA,6BAAyB,6DAJrC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMb,QAAaI,kBAAkB;AAAA;AAAA,KAA/B;;AAAaA,sBAAkB,6DAV9B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,mFALO,CADD;AAQRI,kBAAY,EAAE,CAAC,4DAAD;AARN,KAAT,CAU8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACtBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAaE,YAAY;AAKvB,4BACUC,OADV,EAEUC,QAFV,EAGUC,MAHV,EAISC,EAJT,EAIwB;AAAA;;AAHd,aAAAH,OAAA,GAAAA,OAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACD,aAAAC,EAAA,GAAAA,EAAA;AAEP,aAAKC,EAAL,GAAU,KAAKH,QAAL,CAAcI,QAAd,CAAuBC,QAAvB,CAAgCC,GAAhC,CAAoC,IAApC,CAAV;AACD;;AAZsB;AAAA;AAAA,mCAcZ;AACT,eAAKC,WAAL,CAAiB,KAAKJ,EAAtB;AACA,eAAKK,cAAL,GAAsB,KAAKN,EAAL,CAAQO,KAAR,CAAc;AAClCC,qBAAS,EAAE,CAAC,EAAD,CADuB;AAElCC,kBAAM,EAAE,CAAC,EAAD;AAF0B,WAAd,CAAtB;AAID;AApBsB;AAAA;AAAA,oCAsBXR,EAtBW,EAsBP;AAAA;;AACd,eAAKJ,OAAL,CAAaa,OAAb,CAAqBT,EAArB,EAAyBU,SAAzB,CAAmC,UAAAC,GAAG,EAAI;AACxC,iBAAI,CAACN,cAAL,CAAoBO,QAApB,CAA6B;AAC3BL,uBAAS,EAAEI,GAAG,CAAC,WAAD,CADa;AAE3BH,oBAAM,EAAEG,GAAG,CAAC,QAAD;AAFgB,aAA7B;AAID,WALD;AAMD;AA7BsB;AAAA;AAAA,qCA+BV;AAAA;;AACX,cAAI,CAAC,KAAKN,cAAL,CAAoBQ,KAAzB,EAAgC;AAC9B,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,iBAAKjB,OAAL,CAAakB,UAAb,CAAwB,KAAKd,EAA7B,EAAiC,KAAKK,cAAL,CAAoBU,KAArD,EACGL,SADH,CACa,UAACC,GAAD,EAAS;AAClBK,qBAAO,CAACC,GAAR,CAAYN,GAAZ;;AACA,oBAAI,CAACN,cAAL,CAAoBa,KAApB;;AACA,oBAAI,CAACpB,MAAL,CAAYqB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,aALH;AAMD;AACF;AA1CsB;;AAAA;AAAA,OAAzB;;;;cAMqB;;cACC;;cACF;;cACL;;;;AATFxB,gBAAY,6DALxB,gEAAU;AACTyB,cAAQ,EAAE,eADD;AAETC,cAAQ,EAAR;AAAA;AAAA,wGAFS;;;;AAAA,KAAV,CAKwB,GAAZ1B,YAAY,CAAZ","file":"pages-edit-song-edit-song-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar class=\\\"ios hydrated\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ios title-ios hydrated\\\">Add Song</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding ios list-ios list-lines-full list-ios-lines-full hydrated\\\">\\n    <form [formGroup]=\\\"updateSongForm\\\" (ngSubmit)=\\\"updateForm()\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Song name</ion-label>\\n        <ion-input formControlName=\\\"song_name\\\" type=\\\"text\\\" required></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Artist</ion-label>\\n        <ion-input formControlName=\\\"artist\\\" type=\\\"text\\\" required>\\n        </ion-input>\\n      </ion-item>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-button type=\\\"submit\\\" color=\\\"primary\\\" shape=\\\"full\\\" expand=\\\"block\\\">Update Song</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </form>\\n  </ion-list>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditSongPage } from './edit-song.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditSongPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditSongPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditSongPageRoutingModule } from './edit-song-routing.module';\n\nimport { EditSongPage } from './edit-song.page';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    EditSongPageRoutingModule\n  ],\n  declarations: [EditSongPage]\n})\nexport class EditSongPageModule {}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VkaXQtc29uZy9lZGl0LXNvbmcucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { SongService } from 'src/app/shared/song.service';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-edit-song',\n  templateUrl: './edit-song.page.html',\n  styleUrls: ['./edit-song.page.scss'],\n})\nexport class EditSongPage implements OnInit {\n\n  updateSongForm: FormGroup;\n  id: any;\n\n  constructor(\n    private songAPI: SongService,\n    private actRoute: ActivatedRoute,\n    private router: Router,\n    public fb: FormBuilder\n  ) {\n    this.id = this.actRoute.snapshot.paramMap.get('id');\n  }\n\n  ngOnInit() {\n    this.getSongData(this.id);\n    this.updateSongForm = this.fb.group({\n      song_name: [''],\n      artist: ['']\n    })\n  }\n\n  getSongData(id) {\n    this.songAPI.getSong(id).subscribe(res => {\n      this.updateSongForm.setValue({\n        song_name: res['song_name'],\n        artist: res['artist']\n      });\n    });\n  }\n\n  updateForm() {\n    if (!this.updateSongForm.valid) {\n      return false;\n    } else {\n      this.songAPI.updateSong(this.id, this.updateSongForm.value)\n        .subscribe((res) => {\n          console.log(res)\n          this.updateSongForm.reset();\n          this.router.navigate(['/home']);\n        })\n    }\n  }\n\n}\n\n"]}